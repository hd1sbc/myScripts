.TH AUTOEXEC 1 "2018" "AUTO EXECUTE CODE MANNUAL"
.SH NAME
.PP
\fBautoExec.sh\fR - auto-compiler, interpreter, file updater, and program runner for a variety of programming languages
.SH SYNOPSIS
.PP
\fBautoExec.sh [options] \<sourceCodeFilePath\> [args for sourceCodeFilePath]\fR
.SH DESCRIPTION
.PP
Auto-compiler, interpreter, file updater, and program runner for a variety of programming languages
.PP
This program compiles (if needed) and executes files using the compiler/interpreter associated with file extension in the file path argument (do not need to specify file type of compiler/intepreter). This program supports a variety of different programming languages:
.RS 
- shell/bash (.sh)
.br
- c (.c)
.br
- c++ (.cpp)
.br
- c# (.cs), but only on some platforms
.br
- java (.java)
.br
- perl (.pl)
.br
- python (.py)
.br
- ruby (.rb)
.RE
.SH OPTIONS
.PP
-u, --no-auto-update		:- turns off auto-update for libraries and header files for c programs only
.br
--special=\<type\>	    	:- compiles and/or executes in a special way based on type
.br
.RS
-type options: 
.RS
- overwrittenSysCalls	:- special compilation (and no execution) for overwrittenSysCalls.c file"
.RE
.RE
.SH MODES
.PP
This program has 8 modes (1 for each programming language) and 4 sub-modes. The 4 sub-modes are all for c files. Please see the execCMan.1 for more details
.RS
.br
- shell/bash (.sh)
.br
- c (.c)    :- all object files are executed using valgrind
.br
.RS
- \fBcomplex c programs with libraries\fR	:- if an included header file is associated with a library not in the standard c library, this mode checks and auto-updates as necessary all libraries, included libraries, object files, and header files associated with the library or any of its dependencies. It will also check and auto-update any non-standard included header files that are not associated with a library
.br
- \fBcomplex c programs without libraries\fR	:- if an included header file is not in the standard c library but all non-standard includes are not associated with a library, then check and auto-update all files associated with header file
.br
- \fBno main function file\fR				:- if the file does not contain a main function, a header file will be created or updated for that file, then it will be compiled use the "-c" option in gcc. It will not be executed
.br
- \fBsimple c program\fR					:- if the file contains a main function and all include statements are in the c standard library, then it will run without checking any files
.br
.RE
.br
- c++ (.cpp)
.br
- c# (.cs), but only on some platforms
.br
- java (.java)
.br
- perl (.pl)
.br
- python (.py)
.br
- ruby (.rb)
.br
.SH EXAMPLES
.PP
\<binNameOrAlias\> fileName.sh				:- this will execute a bash file

\<binNameOrAlias\> fileName.c arg1 arg2		:- this will execute a c program with its arguments

\<binNameOrAlias\> -u fileName.c arg1\t		:- this will execute a c program with its arguments without updating libraries or header files

\<binNameOrAlias\> --special=overWrittenSysCalls fileName.c :- this will compile (but not execute) the given file in a way that is designed for use for preloading overwritten system calls. This is designed for use with only overWrittenSysCalls.c
.SH NOTES
.PP
- c programs contain a far more sophisticated process in this program. Please see execCDocs.md for details
.SH SEE ALSO
.PP
- execCMan.1
.SH ASSOCIATED SOURCE CODE DIRECTORIES AND/OR FILES
.PP
- src/executeCode/
