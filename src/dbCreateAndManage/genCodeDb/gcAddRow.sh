#!/bin/bash

# This function generated c code to add row to a db object array
#Args: none
genCodeAddElementToDbArr(){
	echo "struct $structName** addElementToDbArr_$dbObjNum(struct $structName** dbIn, char* rowIn, int flags){"
	echo "	// Vars"
	echo "	char* FF = (char*) __func__;"
	echo "	struct $structName* structToAdd;"
	echo ""

	echo "	// Data Validation"
	echo "	if (dbIn == NULL){ myPerror($F_addRow, FF, \"Invalid 1st parameter; value is null. Returning null\"); return NULL;}"
	echo "	if (rowIn == NULL){ myPerror($F_addRow, FF, \"Invalid 2nd parameter; value is null. Returning null\"); return NULL;}"
	echo "	if (strlen(rowIn) == 0){ myPerror($F_addRow, FF, \"Invalid 2nd parameter; value is an empty string. Returning null\"); return NULL;}"
	echo ""

	echo "	// Getting Values------------------------------------------------------------------"
	echo "	if (memberNames == NULL){ memberNames = getTableInfo(\"$csvLoc\", $colNameColTypeListColNum);}"
	echo "	if (memberNames == NULL){ myPerror($F_addRow, FF, \"getTableInfo() function returned a null value. Returning null\"); return NULL;}"
	echo ""

	echo "	if (dataTypes == NULL){ dataTypes = getTableInfo(\"$csvLoc\", $dataTypesColTypeListColNum);}"
	echo "	if (dataTypes == NULL){"
	echo "		myPerror($F_addRow, FF, \"getTableInfo() function returned a null value. Returning null\");"
	echo "		myFree(memberNames);"
	echo "		return NULL;"
	echo "	}"
	echo ""

	echo "	if (numCols == -1){ numCols = getNumCols(rowIn);"}
	echo "	if (numCols < 0){"
	echo "		myPerror($F_addRow, FF, \"getNumCols() function return an error value (<0). Returning null\");"
	echo "		myFree(dataTypes);"
	echo "		return NULL;"
	echo "	}"
	echo ""

	echo "	currDbSize = getArrSize(dbIn);"
	echo "	if (currDbSize < 0){"
	echo "		myPerror($F_addRow, FF, \"getArrSize() function return an error value (<0). Returning null\");"
	echo "		myFree(dataTypes);"
	echo "		return NULL;"
	echo "	}"

	echo "	if (flags == 1 || flags-10 == 1){ dbIn = realloc(dbIn, sizeof(struct $structName*) * (currDbSize+2));}"
	echo ""
	echo "	structToAdd = malloc(sizeof(struct $structName));"
	echo "	//---------------------------------------------------------------------------------"
	echo ""

	echo "	// For each col, converting the string value to the appropriate data type and adding to the the struct to be added"
	echo "	for (int j = 0; j < numCols; j++){"
	echo "		char* currCol = getCol(j, rowIn);"
	echo "		void* valAsVoidPtr;"
	echo "		if (strcmp(dataTypes[j], \"string\") != 0){"
	echo "			if (strcmp(dataTypes[j], \"bool\") == 0){"
	echo "				valAsVoidPtr = convertBasic(currCol, \"int\");"
	echo "				if (valAsVoidPtr == NULL){"
	echo "					myPerror($F_addRow, FF, \"convertBasic() function returned a null value. Returning null\");"
	echo "					myFree(memberNames); myFree(dataTypes); myFree(structToAdd); free(currCol); myFree(dbIn);"
	echo "					return NULL;"
	echo "				}"
	echo "			}"
	echo "			else if (strcmp(dataTypes[j], \"char\") == 0){"
	echo "				valAsVoidPtr = &currCol[0];"
	echo "			}"
	echo "			else{"
	echo "				valAsVoidPtr = convertBasic(currCol, dataTypes[j]);"
	echo "				if (valAsVoidPtr == NULL){"
	echo "					myPerror($F_addRow, FF, \"convertBasic() function returned a null value. Returning null\");"
	echo "					myFree(memberNames); myFree(dataTypes); myFree(structToAdd); free(currCol); myFree(dbIn);"
	echo "					return NULL;"
	echo "				}"
	echo "			}"
	echo "		}"
	echo "		else{"
	echo "			char* tempCol = createStr(strlen(currCol)+1);"
	echo "			strcat(tempCol, currCol);"
	echo "			valAsVoidPtr = &tempCol;"
	echo "		}"
	echo ""
	echo "		int setStructValReturnVal = setStructMemberVal_$dbObjNum(structToAdd, memberNames[j], valAsVoidPtr);"
	echo "		if (setStructValReturnVal != 0){"
	echo "			myPerror($F_addRow, FF, \"setStructMemberVal() function returned an error value (!=0). Returning null\");"
	echo "			myFree(memberNames); myFree(dataTypes); free(currCol);"
	echo "			return NULL;"
	echo "		}"
	echo "		free(currCol);"
	echo "	}"
	echo ""
	echo "	free(dbIn[currDbSize]); //freeing the old sentinel value"
	echo "	dbIn[currDbSize] = structToAdd;"
	echo "	dbIn[currDbSize+1] = createStruct_$dbObjNum(); //adding the new sentinel value at the end"
	echo ""
	echo "	if (flags >= 10 && flags < 20){"
	echo "		myFree(dataTypes); myFree(memberNames);"
	echo "		numCols = -1; currDbSize = -1;"
	echo "		creatStruct(\"free\"); //freeing tableColList string arrays"
	echo "		freeSetStructVal(); //freeing tableColList string arrays"
	echo "	}"
	echo ""

	echo "	return dbIn;"
	echo "}"

	return 0
}
